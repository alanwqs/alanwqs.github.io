(window.webpackJsonp=window.webpackJsonp||[]).push([[49],{214:function(v,_,t){"use strict";t.r(_);var i=t(0),r=Object(i.a)({},(function(){var v=this.$createElement;this._self._c;return this._m(0)}),[function(){var v=this,_=v.$createElement,t=v._self._c||_;return t("div",{staticClass:"content"},[t("h1",{attrs:{id:"移动端响应式布局"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#移动端响应式布局"}},[v._v("#")]),v._v(" 移动端响应式布局")]),v._v(" "),t("h2",{attrs:{id:"_1、响应式布局"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1、响应式布局"}},[v._v("#")]),v._v(" 1、响应式布局")]),v._v(" "),t("p",[v._v("（1）"),t("strong",[v._v("媒体查询")])]),v._v(" "),t("p",[v._v("可以让我们针对不同的媒体类型定义不同的样式，当重置浏览器窗口大小的过程中，页面也会根据浏览器的宽度和高度重新渲染页面。我们可以先用跨度大的分割点进行分割，如果出现不适配的情况可以再根据实际情况增加新的分割点。")]),v._v(" "),t("p",[v._v("一般可以选择600px,900px,1200px,1800px作为分割点、480px,800px,1400px,1400px。移动端优先首先使用的是min-width，PC端优先使用的max-width。")]),v._v(" "),t("p",[v._v("（2）"),t("strong",[v._v("百分比布局")])]),v._v(" "),t("p",[v._v("通过百分比单位，可以使得浏览器中组件的宽和高随着浏览器的高度的变化而变化，从而实现响应式的效果。Bootstrap里面的栅格系统就是利用百分比来定义元素的宽高，CSS3支持最大最小高，可以将百分比和max(min)一起结合使用来定义元素在不同设备下的宽高。")]),v._v(" "),t("ul",[t("li",[t("p",[v._v("子元素的"),t("strong",[v._v("height")]),v._v("或"),t("strong",[v._v("width")]),v._v("中使用百分比，是相对于子元素的直接父元素，width相对于父元素的width，height相对于父元素的height")])]),v._v(" "),t("li",[t("p",[v._v("子元素的"),t("strong",[v._v("top")]),v._v("和"),t("strong",[v._v("bottom")]),v._v("如果设置百分比，则相对于直接"),t("strong",[v._v("非static定位")]),v._v("(默认定位)的父元素的高度，同样子元素的left和right如果设置百分比，则相对于直接非static定位(默认定位的)父元素的宽度；")])]),v._v(" "),t("li",[t("p",[v._v("子元素的"),t("strong",[v._v("padding")]),v._v("如果设置百分比，不论是垂直方向或者是水平方向，都相对于"),t("strong",[v._v("直接父亲元素的width")]),v._v("，而"),t("strong",[v._v("与父元素的height无关")]),v._v("。跟padding一样，margin也是如此")])]),v._v(" "),t("li",[t("p",[v._v("子元素的margin如果设置成百分比，不论是垂直方向还是水平方向，都相对于直接父元素的width；")])]),v._v(" "),t("li",[t("p",[t("strong",[v._v("border-radius")]),v._v("不一样，如果设置border-radius为百分比，则是相对于"),t("strong",[v._v("自身的宽度")]),v._v("，除了border-radius外，还有比如translate、background-size等都是相对于自身的")])])]),v._v(" "),t("p",[t("strong",[v._v("计算困难")]),v._v("，如果我们要定义一个元素的宽度和高度，按照设计稿，必须换算成百分比单位。")]),v._v(" "),t("p",[v._v("（3）"),t("strong",[v._v("rem布局")])]),v._v(" "),t("p",[v._v("rem单位都是相对于根元素html的font-size来决定大小的,根元素的font-size相当于提供了一个基准，当页面的size发生变化时，只需要改变font-size的值，那么以rem为固定单位的元素的大小也会发生响应的变化。")]),v._v(" "),t("p",[v._v("rem响应式的布局思想：")]),v._v(" "),t("ul",[t("li",[t("p",[v._v("一般不要给元素设置具体的宽度，但是对于一些小图标可以设定具体宽度值")])]),v._v(" "),t("li",[t("p",[v._v("高度值可以设置固定值，设计稿有多大，我们就严格有多大")])]),v._v(" "),t("li",[t("p",[v._v("所有设置的固定值都用rem做单位（首先在HTML总设置一个基准值：px和rem的对应比例，然后在效果图上获取px值，布局的时候转化为rem值)")])]),v._v(" "),t("li",[t("p",[v._v("js获取真实屏幕的宽度，让其除以设计稿的宽度，算出比例，把之前的基准值按照比例进行重新的设定，这样项目就可以在移动端自适应了")])])]),v._v(" "),t("p",[v._v("（4）"),t("strong",[v._v("视图窗口")])]),v._v(" "),t("p",[v._v("css3中引入了一个新的单位vw/vh，与视图窗口有关，vw表示相对于视图窗口的宽度，vh表示相对于视图窗口高度，除了vw和vh外，还有vmin和vmax两个相关的单位。各个单位具体的含义如下：")]),v._v(" "),t("ul",[t("li",[t("p",[v._v("vw 相对于视窗的宽度，1vw 等于视口宽度的1%，即视窗宽度是100vw")])]),v._v(" "),t("li",[t("p",[v._v("vh  相对于视窗的高度，1vh 等于视口高度的1%，即视窗高度是100vh")])]),v._v(" "),t("li",[t("p",[v._v("vmin  vw和vh中的较小值")])]),v._v(" "),t("li",[t("p",[v._v("vmax  vw和vh中的较大值")])])]),v._v(" "),t("p",[v._v("用视口单位度量，视口宽度为100vw，高度为100vh（左侧为竖屏情况，右侧为横屏情况）。例如，在桌面端浏览器视口尺寸为650px，那么 1vw = 650 * 1% = 6.5px（这是理论推算的出，如果浏览器不支持0.5px，那么实际渲染结果可能是7px）。")]),v._v(" "),t("p",[v._v("使用视口单位来实现响应式有两种做法：")]),v._v(" "),t("ul",[t("li",[t("p",[v._v("1.仅使用vw作为CSS单位")])]),v._v(" "),t("li",[t("p",[v._v("2.搭配vw和rem")])])]),v._v(" "),t("p",[v._v("（5）"),t("strong",[v._v("图片响应式")])]),v._v(" "),t("ul",[t("li",[v._v("一个就是大小自适应，这样能够保证图片在不同的屏幕分辨率下出现压缩、拉伸的情况；")]),v._v(" "),t("li",[v._v("一个就是根据不同的屏幕分辨率和设备像素比来尽可能选择高分辨率的图片")])]),v._v(" "),t("p",[v._v("1.使用max-width（图片自适应）:")]),v._v(" "),t("p",[v._v("图片自适应意思就是图片能随着容器的大小进行缩放")]),v._v(" "),t("p",[v._v("2.使用srcset  "),t("code",[v._v('<img srcset="photo_w350.jpg 1x, photo_w640.jpg 2x" src="photo_w350.jpg" alt="">')])]),v._v(" "),t("p",[v._v("3.使用background-image")]),v._v(" "),t("p",[v._v("4.使用picture标签，包含零或多个source 元素和一个img元素来为不同的显示/设备场景提供图像版本。浏览器会选择最匹配的子 "),t("code",[v._v("<source>")]),v._v(" 元素，如果没有匹配的，就选择 "),t("code",[v._v("<img>")]),v._v(" 元素的 "),t("code",[v._v("src")]),v._v("属性中的URL")])])}],!1,null,null,null);_.default=r.exports}}]);